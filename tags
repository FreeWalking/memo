!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	2	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
addBtnClicked	myMenu.py	/^    def addBtnClicked(self):$/;"	m	class:MainMenu
app	trayIcon.py	/^    app = QApplication(sys.argv)$/;"	v
changeEffects	myLabel.py	/^    def changeEffects(self):$/;"	m	class:NoteLabel
changeEffects	myMenu.py	/^    def changeEffects(self):$/;"	m	class:EffectButton
changeEffects	myMenu.py	/^    def changeEffects(self):$/;"	m	class:EffectLabel
changeLabelStyleToCollide	myLabel.py	/^    def changeLabelStyleToCollide(self):$/;"	m	class:NoteLabel
changeTrashStyleToHover	myMenu.py	/^    def changeTrashStyleToHover(self):$/;"	m	class:MainMenu
contextMenuEvent	myLabel.py	/^    def contextMenuEvent(self, event):$/;"	m	class:NoteLabel
data	dataAccess.py	/^    data = {$/;"	v
dateTime	myLabel.py	/^    def dateTime(self):$/;"	m	class:FocusEdit
document	myLabel.py	/^    def document(self):$/;"	m	class:FocusEdit
editFinish	myLabel.py	/^    def editFinish(self):$/;"	m	class:NoteLabel
editing	myLabel.py	/^    def editing(self):$/;"	m	class:NoteLabel
EditWidget	myEdit.py	/^class EditWidget(QLineEdit):$/;"	c
EffectButton	myMenu.py	/^class EffectButton(QPushButton):$/;"	c
EffectLabel	myMenu.py	/^class EffectLabel(QLabel):$/;"	c
enterEvent	myLabel.py	/^    def enterEvent(self, event):$/;"	m	class:NoteLabel
enterEvent	myMenu.py	/^    def enterEvent(self, event):$/;"	m	class:EffectButton
enterEvent	myMenu.py	/^    def enterEvent(self, event):$/;"	m	class:EffectLabel
exitApp	trayIcon.py	/^    def exitApp(self):$/;"	m	class:TrayIcon
FocusEdit	myLabel.py	/^class FocusEdit(QWidget):$/;"	c
focusInEvent	myLabel.py	/^    def focusInEvent(self, event):$/;"	m	class:FocusEdit
focusOutEvent	myLabel.py	/^    def focusOutEvent(self, event):$/;"	m	class:FocusEdit
getContent	myLabel.py	/^    def getContent(self):$/;"	m	class:NoteLabel
getTrashPosSize	myMenu.py	/^    def getTrashPosSize(self):$/;"	m	class:MainMenu
iconClicked	trayIcon.py	/^    def iconClicked(self, reason):$/;"	m	class:TrayIcon
initObject	myEdit.py	/^    def initObject(self):$/;"	m	class:EditWidget
initObjects	myLabel.py	/^    def initObjects(self):$/;"	m	class:FocusEdit
initObjects	myLabel.py	/^    def initObjects(self):$/;"	m	class:NoteLabel
initObjects	myMenu.py	/^    def initObjects(self):$/;"	m	class:MainMenu
initObjects	trayIcon.py	/^    def initObjects(self):$/;"	m	class:TrayIcon
isCollide	myLabel.py	/^    def isCollide(self, widget1, widget2):$/;"	m	class:NoteLabel
leaveEvent	myLabel.py	/^    def leaveEvent(self, event):$/;"	m	class:NoteLabel
leaveEvent	myMenu.py	/^    def leaveEvent(self, event):$/;"	m	class:EffectButton
leaveEvent	myMenu.py	/^    def leaveEvent(self, event):$/;"	m	class:EffectLabel
MainMenu	myMenu.py	/^class MainMenu(QWidget):$/;"	c
mouseDoubleClickEvent	myLabel.py	/^    def mouseDoubleClickEvent(self, event):$/;"	m	class:NoteLabel
mouseMoveEvent	myLabel.py	/^    def mouseMoveEvent(self, QMouseEvent):$/;"	m	class:NoteLabel
mousePressEvent	myLabel.py	/^    def mousePressEvent(self, event):$/;"	m	class:NoteLabel
mouseReleaseEvent	myLabel.py	/^    def mouseReleaseEvent(self, QMouseEvent):$/;"	m	class:NoteLabel
name	exe.py	/^      name = 'PyQt Demo',$/;"	v
NoteLabel	myLabel.py	/^class NoteLabel(QWidget):$/;"	c
ok	myEdit.py	/^    def ok(self):$/;"	m	class:EditWidget
ok	myLabel.py	/^    def ok(self):$/;"	m	class:NoteLabel
options	exe.py	/^      options = {'py2exe': py2exe_options}$/;"	v
py2exe_options	exe.py	/^py2exe_options = {$/;"	v
r	dataAccess.py	/^    r = read(data['id'])$/;"	v
read	dataAccess.py	/^def read(date):$/;"	f
save	dataAccess.py	/^def save(dictdata):$/;"	f
save	myLabel.py	/^    def save(self):$/;"	m	class:FocusEdit
setAllLabel	myLabel.py	/^    def setAllLabel(self, memodata):$/;"	m	class:NoteLabel
setEffects	myLabel.py	/^    def setEffects(self):$/;"	m	class:NoteLabel
setEffects	myMenu.py	/^    def setEffects(self):$/;"	m	class:EffectButton
setEffects	myMenu.py	/^    def setEffects(self):$/;"	m	class:EffectLabel
setFocus	myLabel.py	/^    def setFocus(self):$/;"	m	class:FocusEdit
setLabelDefaultFont	myLabel.py	/^    def setLabelDefaultFont(self):$/;"	m	class:NoteLabel
setLabelNormalStyle	myLabel.py	/^    def setLabelNormalStyle(self):$/;"	m	class:NoteLabel
setMySelfStyle	myMenu.py	/^    def setMySelfStyle(self):$/;"	m	class:MainMenu
setMySize	myMenu.py	/^    def setMySize(self):$/;"	m	class:MainMenu
setMySizePolicy	myLabel.py	/^    def setMySizePolicy(self):$/;"	m	class:FocusEdit
setMySizePolicy	myLabel.py	/^    def setMySizePolicy(self):$/;"	m	class:NoteLabel
setMyStyle	myMenu.py	/^    def setMyStyle(self):$/;"	m	class:MainMenu
setObject	myEdit.py	/^    def setObject(self):$/;"	m	class:EditWidget
setObjects	myLabel.py	/^    def setObjects(self):$/;"	m	class:FocusEdit
setObjects	myLabel.py	/^    def setObjects(self, memodata):$/;"	m	class:NoteLabel
setObjects	myMenu.py	/^    def setObjects(self):$/;"	m	class:MainMenu
setObjects	trayIcon.py	/^    def setObjects(self):$/;"	m	class:TrayIcon
setStyle	myLabel.py	/^    def setStyle(self):$/;"	m	class:FocusEdit
setStyle	myLabel.py	/^    def setStyle(self):$/;"	m	class:NoteLabel
setText	myLabel.py	/^    def setText(self, string):$/;"	m	class:NoteLabel
setText	myLabel.py	/^    def setText(self, text):$/;"	m	class:FocusEdit
setTimeFromText	myLabel.py	/^    def setTimeFromText(self, text):$/;"	m	class:FocusEdit
setTrashStyle	myMenu.py	/^    def setTrashStyle(self):$/;"	m	class:MainMenu
showWidget	trayIcon.py	/^    def showWidget(self):$/;"	m	class:TrayIcon
textColor	myLabel.py	/^    def textColor(self):$/;"	m	class:NoteLabel
textFont	myLabel.py	/^    def textFont(self):$/;"	m	class:NoteLabel
ti	trayIcon.py	/^    ti = TrayIcon()$/;"	v
TrayIcon	trayIcon.py	/^class TrayIcon(QSystemTrayIcon):$/;"	c
version	exe.py	/^      version = '1.0',$/;"	v
window	exe.py	/^window = [{$/;"	v
windows	exe.py	/^      windows = ['hotkey.pyw',], $/;"	v
__init__	myEdit.py	/^    def __init__(self, parent=None):$/;"	m	class:EditWidget
__init__	myLabel.py	/^    def __init__(self, memodata=None, parent=None):$/;"	m	class:NoteLabel
__init__	myLabel.py	/^    def __init__(self, parent=None):$/;"	m	class:FocusEdit
__init__	myMenu.py	/^    def __init__(self, parent=None):$/;"	m	class:EffectButton
__init__	myMenu.py	/^    def __init__(self, parent=None):$/;"	m	class:EffectLabel
__init__	myMenu.py	/^    def __init__(self, parent=None):$/;"	m	class:MainMenu
__init__	trayIcon.py	/^    def __init__(self, parent=None):$/;"	m	class:TrayIcon
